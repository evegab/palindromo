swagger: "2.0"
info:
  description: "API para obtener el palindrome más grande dentro de una cadena dada, se requiere autenticación y autorización para el uso de este servicio."
  version: "1.0.0"
  title: "API Palindromo"
  termsOfService: ""
  contact:
    email: "mail@mail.com"
  license:
    name: "none"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/"
tags:
- name: "palindromo"
  description: "Servicio para obtener palindromo si existe"
- name: "index"
  description: "Acceder al index de nuestro API '/'"
- name: "login"
  description: "Autenticación ante el sistema"
schemes:
- "https"
- "http"
paths:
  /palindromo:
    post:
      tags:
      - "palindromo"
      summary: "Enviar cadena para encontrar su palindromo más grande si existe"
      description: "Este endpoint recibe una cadena en el body en formato JSON para evaluar si la misma contiene paindromos y retorma el más grande en longitud"
      operationId: "buscar palindromo"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Palindromo"
      responses:
        "400":
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /:
    get:
      tags:
      - "index"
      summary: "no hace nada este endpoint"
      description: ""
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: false
        schema:
          $ref: ""
      responses:
        "200":
          description: ""
  /login:
    post:
      tags:
      - "login"
      summary: "Ingresar username y password para autenticacion"
      description: ""
      operationId: "createUsersWithListInput"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Model AuthRequest"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Auth"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Token"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
  
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Auth:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
    xml:
      name: "AuthRequest"
  Palindromo:
    type: "object"
    properties:
      palindromo:
        type: "string"
    xml:
      name: "AuthRequest" 
  Token:
    type: "object"
    properties:
      token:
        type: "string"
    xml:
      name: "AuthRequest" 
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"